#!/usr/bin/perl 
# Meng Liu and Hong-Yu Ou on April-24-2018
# School of Life Sciences & Biotechnology, Shanghai Jiao Tong University

use strict;
use Bio::SearchIO;
use Getopt::Std;

my $usage = qq(
This script read and filter the blastp out file to generate the TAB delimited formated  blast_final_reslut ! 

Usage: script_name.pl <blast_output_file> <Hvalue> <blast_parse_file> <ptt_file>	<blast_final_reslut> <LOG file>

<blast_output_file>	generated by blastp with specified parameters(you can only change the \"\$variable\" in the following example), the command example:
\$blastp -evalue \$blast_evalue -num_threads 10 -max_hsps 1 -num_descriptions 1 -num_alignments 1 -db \$ARG_blast_db -query \$seq_faa -out \$ARG_blast_out -num_threads <Integer, (>=1 and =<12)>

<blast_parse_file>	example:
query_name	query_length	evalue	hit_gi	hit_name	hit_length	hsp_length	identities	hvalue	lengthdifference	query_start	query_end	hit_start	hit_end	hit_description
gi|9773754920|ref|YP_005229652.1|	293	0.0	AR_AAG13410	AR_AAG13410	293	293	99.7	0.997	0	1	293	1	293	carbepenem-hydrolyzing beta-lactamase KPC-1 
gi|9773754948|ref|YP_005229680.1|	286	0.0	AR_NP_052173	AR_NP_052173	286	286	100.0	1.000	0	1	286	1	286	beta-lactamase 

<blast_final_reslut>	example:
query_gi	hit_gi	hvalue	hit_description	Location	Strand	Length	Synonym
28869782	AR_NP_598114	0.779	hypothetical protein	2863432..2866575	-	1047	PSPTO_2592
28870272	AR_NP_251183	0.693	RND multidrug efflux membrane fusion protein MexE precursor 	3483136..3484380	+	414	PSPTO_3099
28870273	AR_NP_792892	1.000	multidrug efflux RND transporter MexF 	3484393..3487584	+	1063	PSPTO_3100

);
die($usage) if ( @ARGV != 6 );

my $filein = shift;# <blast_output_file> 
my $Hvaluecutoff=shift; # <Hvalue> 
my $fileout = shift; # <blast_parse_file>
my $ptt = shift; #<ptt_file>
my $finalout = shift; #<blast_final_reslut>
my $Log = shift; #<LOG file>

################################################################
## to parse the <blast_output_file> with the cutoff of <Hvalue>
## and generate the TAB delimited formated <blast_parse_file>
## which is for the generation of the <blast_final_reslut>
##############################################################
open FILE, "> $fileout";
print FILE "query_name\tquery_length\tevalue\thit_gi\thit_name\thit_length\thsp_length\tidentities\thvalue\tlengthdifference\t";
print FILE "query_start\tquery_end\thit_start\thit_end\thit_description\n";

my $myquery_name="";
my $myhit_gi = "";
my $in = new Bio::SearchIO(-format => 'blast', 
                           -file   => $filein);
while( my $result = $in->next_result ) {
  ## $result is a Bio::Search::Result::ResultI compliant object
   my $n=0;
   my $desc = $result->query_description;
   my @location = split /\s+/, $desc;
   my $query_start = $location[0];
   my $query_end = $location[1];
   my $len = $location[2];
   $len =~ s/len=//;
   while( my $hit = $result->next_hit ) {
    ## $hit is a Bio::Search::Hit::HitI compliant object
    $n++;
  	while( my $hsp = $hit->next_hsp ) {
  		my $hit_des = $hit->description;
      my $hit_org = "-";
      if($hit_des =~ /\[(\w+)\s(\w+)\s(\w+)/){$hit_org = $1." ".$2." ".$3;}
      $hit_des =~ s/\[\w+\s.+//;
      if($hit_des =~ /hypothetical protein/){$hit_des="hypothetical protein";}  
      my $identities = sprintf("%.1f",$hsp->percent_identity);   
      my $hvalue = sprintf("%.3f",$hsp->percent_identity *($hsp->length('total')/$hit->length)/100);
      if($hvalue > $Hvaluecutoff){
      	$myquery_name = $result->query_name;
   	    $myhit_gi = $hit->name;
   	    $myhit_gi =~ /gi\|(\d+)\|/;#PHAGE_Burkho_KS9_NC_013055-gi|255033728|ref|YP_003090172.1|
   	    $myhit_gi = $1 if $myhit_gi=~ /gi\|(\d+)\|/;
   	    print FILE $myquery_name,"\t",$result->query_length,"\t",$hsp->evalue,"\t",$myhit_gi,"\t",$hit->name,"\t",$hit->length,"\t",$hsp->length('total'),"\t";
   	    print FILE $identities,"\t",$hvalue,"\t",($result->query_length - $hit->length),"\t",$hsp->start('query'),"\t",$hsp->end('query') ,"\t",$hsp->start('hit'),"\t", $hsp->end('hit'),"\t";
   	    print FILE $hit_des,"\n";
   	  }
	    last;
	  }
    last;
   }
}
close FILE;

########################################################################################
## read the <ptt_file> and <blast_parse_file>
## to generate the <blast_final_reslut> which contains the coordinate info about the hit
##########################################################################################
my %hit_gi_line = ();
my $content = "";
my $q_gi = 0;
my $hit_num = 0;
open (OUT, $fileout) || die "ERROR: Cannot open the $fileout file!\n";
readline OUT; ## past the header line 
while(<OUT>){
	next unless (/^(\d+)\_/ || /^gi/);
	chomp;
	my @array = split(/\t/, $_);
	$q_gi = $1 if (($array[0] =~ /^(\d+)\_/) || ($array[0] =~ /^gi\|(\d+)\|/)); ## eg£ºgi|2547433355|ref|CAJ85677.1|
	$hit_gi_line{$q_gi}= "$q_gi\t$array[3]\t$array[8]\t$array[14]\t"; # $q_gi	hit_gi	hvalue	hit_description	
	$content .= $hit_gi_line{$q_gi};
	open (PTT, $ptt) || die "ERROR: Cannot open the $ptt file!\n";
	while(<PTT>){
		next unless /^\d+\.\./;
		chomp;
		my @array_ptt = split(/\t/, $_);
		next unless $array_ptt[3] == $q_gi;
		$hit_gi_line{$array_ptt[3]}= "$array_ptt[0]\t$array_ptt[1]\t$array_ptt[2]\t$array_ptt[5]\n";#	Location	Strand	Length	Synonym	
		$content .= $hit_gi_line{$array_ptt[3]};
	}
	close PTT;
	$hit_num ++;
}
close OUT;


if($hit_num){
	open RESULT, ">$finalout";
	print RESULT "query_gi\thit_gi\thvalue\thit_description\tLocation\tStrand\tLength\tSynonym\n";
	print RESULT $content;
	close RESULT;
}else{
	open LOG, ">>$Log";
  print LOG "During parsing the result, no result pass the Hvalue($Hvaluecutoff) filtering!\n";
  close LOG;
  my $finalout_no = $finalout.".none";
  open IN, ">$finalout_no";
  print IN "NO hit was found!";
  close IN;
  
  exit;}


